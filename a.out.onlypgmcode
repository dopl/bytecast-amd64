00000000004004e4 <sum>:
#include <stdio.h>

int sum(int a, int b)
{
  4004e4:	55                   	push   %rbp
  4004e5:	48 89 e5             	mov    %rsp,%rbp
  4004e8:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4004eb:	89 75 f8             	mov    %esi,-0x8(%rbp)
	return a + b;
  4004ee:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4004f1:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4004f4:	8d 04 02             	lea    (%rdx,%rax,1),%eax
}
  4004f7:	c9                   	leaveq 
  4004f8:	c3                   	retq   

00000000004004f9 <halve>:
int halve(int a)
{
  4004f9:	55                   	push   %rbp
  4004fa:	48 89 e5             	mov    %rsp,%rbp
  4004fd:	89 7d fc             	mov    %edi,-0x4(%rbp)
	return a/2;
  400500:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400503:	89 c2                	mov    %eax,%edx
  400505:	c1 ea 1f             	shr    $0x1f,%edx
  400508:	8d 04 02             	lea    (%rdx,%rax,1),%eax
  40050b:	d1 f8                	sar    %eax
}
  40050d:	c9                   	leaveq 
  40050e:	c3                   	retq   

000000000040050f <dostuff>:
int dostuff(int a, int b)
{
  40050f:	55                   	push   %rbp
  400510:	48 89 e5             	mov    %rsp,%rbp
  400513:	48 83 ec 08          	sub    $0x8,%rsp
  400517:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40051a:	89 75 f8             	mov    %esi,-0x8(%rbp)
	if(a < b)
  40051d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400520:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  400523:	7d 11                	jge    400536 <dostuff+0x27>
		return sum(a,b);
  400525:	8b 55 f8             	mov    -0x8(%rbp),%edx
  400528:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40052b:	89 d6                	mov    %edx,%esi
  40052d:	89 c7                	mov    %eax,%edi
  40052f:	e8 b0 ff ff ff       	callq  4004e4 <sum>
  400534:	eb 0a                	jmp    400540 <dostuff+0x31>
	else
		return halve(a);
  400536:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400539:	89 c7                	mov    %eax,%edi
  40053b:	e8 b9 ff ff ff       	callq  4004f9 <halve>
}
  400540:	c9                   	leaveq 
  400541:	c3                   	retq   

0000000000400542 <main>:

int main(int argc, char* argv[])
{
  400542:	55                   	push   %rbp
  400543:	48 89 e5             	mov    %rsp,%rbp
  400546:	48 83 ec 20          	sub    $0x20,%rsp
  40054a:	89 7d ec             	mov    %edi,-0x14(%rbp)
  40054d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if(argc == 3){
  400551:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
  400555:	75 4c                	jne    4005a3 <main+0x61>
		int ret = dostuff((int)argv[1][0],(int)argv[2][0]);
  400557:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40055b:	48 83 c0 10          	add    $0x10,%rax
  40055f:	48 8b 00             	mov    (%rax),%rax
  400562:	0f b6 00             	movzbl (%rax),%eax
  400565:	0f be d0             	movsbl %al,%edx
  400568:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40056c:	48 83 c0 08          	add    $0x8,%rax
  400570:	48 8b 00             	mov    (%rax),%rax
  400573:	0f b6 00             	movzbl (%rax),%eax
  400576:	0f be c0             	movsbl %al,%eax
  400579:	89 d6                	mov    %edx,%esi
  40057b:	89 c7                	mov    %eax,%edi
  40057d:	e8 8d ff ff ff       	callq  40050f <dostuff>
  400582:	89 45 fc             	mov    %eax,-0x4(%rbp)
		printf("The value is %d\n", ret);
  400585:	b8 9c 06 40 00       	mov    $0x40069c,%eax
  40058a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40058d:	89 d6                	mov    %edx,%esi
  40058f:	48 89 c7             	mov    %rax,%rdi
  400592:	b8 00 00 00 00       	mov    $0x0,%eax
  400597:	e8 44 fe ff ff       	callq  4003e0 <printf@plt>
	}
	else{
		return 1;
	}
	return 0;
  40059c:	b8 00 00 00 00       	mov    $0x0,%eax
  4005a1:	eb 05                	jmp    4005a8 <main+0x66>
	if(argc == 3){
		int ret = dostuff((int)argv[1][0],(int)argv[2][0]);
		printf("The value is %d\n", ret);
	}
	else{
		return 1;
  4005a3:	b8 01 00 00 00       	mov    $0x1,%eax
	}
	return 0;
}
  4005a8:	c9                   	leaveq 
  4005a9:	c3                   	retq   
  4005aa:	90                   	nop
  4005ab:	90                   	nop
  4005ac:	90                   	nop
  4005ad:	90                   	nop
  4005ae:	90                   	nop
  4005af:	90                   	nop

